# workflows/build-and-publish-mimalloc.yml
#
# Build & Publish Whist mimalloc
# Build and publish the Whist version of mimalloc by uploading the compiled libs to AWS S3.

name: "Build & Publish Whist mimalloc"

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - README.md
  push:
    branches:
      - main
    paths-ignore:
      - README.md
  workflow_dispatch:

# This guarantees that if you push many commits to the same PR, only the latest
# commit will get run (others get cancelled)
concurrency:
  group: build-and-publish-mimalloc-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-and-publish-whist-mimalloc:
    name: ${{ matrix.config.name }} (${{ matrix.options.name }})
    runs-on: ${{ matrix.config.os }}

    strategy:
      matrix:
        config:
          - name: "macOS (x64)"
            os: macos-11 # Xcode and Homebrew come preinstalled
          - name: "macOS (arm64)"
            os: macos-11 # Xcode and Homebrew come preinstalled

    env:
      macos-x64-tar-name: whist-macos-x64-mimalloc-static-lib.tar.gz
      macos-arm64-tar-name: whist-macos-arm64-mimalloc-static-lib.tar.gz
      headers-tar-name: whist-mimalloc-headers.tar.gz
      s3-bucket-uri: s3://whist-protocol-dependencies
      s3-bucket-region: us-east-1

    steps:
      ################################# CONFIG STEPS START ##############################

      - name: Checkout Git Repository
        uses: actions/checkout@v3

      - name: Configure AWS S3 CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_GITHUB_ACTIONS_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_GITHUB_ACTIONS_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.s3-bucket-region }}

      ###################################################################################
      ################################# MACOS STEPS START ###############################
      - name: Build mimalloc on macOS
        if: runner.os == 'macOS'
        env:
          CMAKE_OSX_SYSROOT: "/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
        run: |
          mkdir -p out/release && cd out/release
          if [[ "${{ matrix.config.arch }}" == "x86_64" ]]; then
            # configure Cmake and build mimalloc for native compilation on x64 systems
            cmake ../.. \
                  -D CMAKE_OSX_DEPLOYMENT_TARGET="10.13" \
                  -D CMAKE_OSX_SYSROOT="${{ env.CMAKE_OSX_SYSROOT }}"
          elif [[ "${{ matrix.config.arch }}" == "arm64" ]]; then
            # configure Cmake and build mimalloc for cross-compilation to arm64 from x64 systems
            cmake ../.. \
                  -D CMAKE_OSX_DEPLOYMENT_TARGET="11.0" \
                  -D CMAKE_OSX_ARCHITECTURES="arm64" \
                  -D CMAKE_OSX_SYSROOT="${{ env.CMAKE_OSX_SYSROOT }}"
          else
            echo "Unsupported compilation attempt on macOS"
            exit
          fi

          make

          mv libmimalloc.a ../..
          cd ../..

      ###################################################################################
      ################################# PUBLISH STEPS START #############################

      # Only publish to AWS S3 on Push events (code merged into `dev`), PRs only build to test
      - name: Tar mimalloc and Upload to AWS S3 (Only on Push/Workflow_dispatch Events)
        if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            if [[ "${{ matrix.config.arch }}" == "x86_64" ]]; then
              tar -zcvf ${{ env.macos-x64-tar-name }} libmimalloc.a
              aws s3 cp ${{ env.macos-x64-tar-name }} ${{ env.s3-bucket-uri }}/${{ env.macos-x64-tar-name }}
            elif [[ "${{ matrix.config.arch }}" == "arm64" ]]; then
              tar -zcvf ${{ env.macos-arm64-tar-name }} libmimalloc.a
              aws s3 cp ${{ env.macos-arm64-tar-name }} ${{ env.s3-bucket-uri }}/${{ env.macos-arm64-tar-name }}
            else
              echo "Tried to tar and upload to S3 for an unsupported OS"
              exit
            fi
          fi

      - name: Tar mimalloc headers and Upload to AWS S3 (Only on Push/Workflow_dispatch Events)
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && runner.os == 'macOS'}}
        run: |
          # tar and upload the mimalloc headers
          tar -zcvf ${{ env.headers-tar-name }} include
          aws s3 cp ${{ env.headers-tar-name }} ${{ env.s3-bucket-uri }}/${{ env.headers-tar-name }}

      ###################################################################################

      - name: Checkout whisthq/whist Git Repository
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && failure() }}
        uses: actions/checkout@v3
        with:
          repository: whisthq/whist
          ref: "dev"
          token: ${{ secrets.GHA_PERSONAL_ACCESS_TOKEN }}

      - name: Setup Python-based Notifications
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && failure() }}
        working-directory: .github/workflows/helpers
        run: ./notifications/setup_notifications.sh

      - name: Notify Slack on Workflow Error (Only on Push/Workflow_dispatch Events)
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && failure() }}
        shell: python3 {0}
        run: |
          from notifications.slack_bot import slack_post
          SLACK_WEBHOOK = "${{ secrets.SLACK_HOOKS_ENDPOINT_PROD }}"
          BODY = f"@releases :rotating_light: Failed to deploy Whist `mimalloc` Static Library to AWS S3, investigate immediately :rotating_light: (<https://github.com/whisthq/mimalloc/actions/runs/${{ github.run_id }} | see logs>)"
          slack_post(slack_webhook=SLACK_WEBHOOK, body=BODY)
  #######################################################################################
  #######################################################################################

  # Notify us in Slack if all jobs from this workflow succeed
  notify-slack:
    name: Notify Slack
    runs-on: ubuntu-20.04
    needs: [build-and-publish-whist-mimalloc]
    if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && success() }}
    steps:
      - name: Checkout whisthq/whist Git Repository
        uses: actions/checkout@v3
        with:
          repository: whisthq/whist
          ref: "dev"
          token: ${{ secrets.GHA_PERSONAL_ACCESS_TOKEN }}

      - name: Setup Python-based Notifications
        working-directory: .github/workflows/helpers
        run: ./notifications/setup_notifications.sh

      - name: Notify Slack on Workflow Success
        shell: python3 {0}
        run: |
          from notifications.slack_bot import slack_post
          SLACK_WEBHOOK = "${{ secrets.SLACK_HOOKS_ENDPOINT_PROD }}"
          TITLE = "Whist mimalloc library deployed"
          BODY = f"Whist `mimalloc` static library deployed to Production via upload to AWS S3 (<https://github.com/whisthq/mimalloc/actions/runs/${{ github.run_id }} | see logs>)"
          slack_post(slack_webhook=SLACK_WEBHOOK, title=TITLE, body=BODY)
